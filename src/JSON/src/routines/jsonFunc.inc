!! -------------------------------------------------------------------------- !!
Function JSON_IsFound(json, path) Result( isFound )
    Implicit None
    type(typJSON), pointer       :: json
    Character(len=*), intent(in) :: path
    Logical                      :: isFound
!! -------------------------------------------------------------------------- !!
    Call jsonCore%Info(json, path, isFound)
!! -------------------------------------------------------------------------- !!
End Function
!! -------------------------------------------------------------------------- !!

!! -------------------------------------------------------------------------- !!
Subroutine JSON_Remove(json, path)
!! -------------------------------------------------------------------------- !!
    Implicit None
    type(typJSON), pointer       :: json
    Character(len=*), intent(in) :: path
!! -------------------------------------------------------------------------- !!
    Call jsonCore%remove_if_present( json, path )
!! -------------------------------------------------------------------------- !!
End Subroutine
!! -------------------------------------------------------------------------- !!

!! -------------------------------------------------------------------------- !!
Subroutine JSON_GetInfo(json, name, nChild)
!! -------------------------------------------------------------------------- !!
    Implicit None
    Type(typJSON), pointer        :: json
    Character(len=:), allocatable :: name
    integer,intent(out)           :: nChild
!! -------------------------------------------------------------------------- !!
    if ( Allocated(name) ) Deallocate(name)
    Call jsonCore%info(p = json, n_children = nChild, name = name)
!! -------------------------------------------------------------------------- !!
End Subroutine
!! -------------------------------------------------------------------------- !!

!! -------------------------------------------------------------------------- !!
Subroutine JSON_GetNChild( json, nChild )
!! -------------------------------------------------------------------------- !!
    Implicit None
    Type(typJSON), pointer :: json
    integer, intent(out)   :: nChild
!! -------------------------------------------------------------------------- !!
    Call jsonCore%info(p = json, n_children = nChild)
!! -------------------------------------------------------------------------- !!
End Subroutine
!! -------------------------------------------------------------------------- !!

!! -------------------------------------------------------------------------- !!
Subroutine JSON_GetName(json, name)
!! -------------------------------------------------------------------------- !!
    Implicit None
    Type(typJSON), pointer, intent(in) :: json
    Character(len=:), allocatable      :: name
!! -------------------------------------------------------------------------- !!
    if ( Allocated(name) ) deallocate(name)
    Call jsonCore%info(p = json, name = name)
!! -------------------------------------------------------------------------- !!
End Subroutine
!! -------------------------------------------------------------------------- !!

!! -------------------------------------------------------------------------- !!
Subroutine JSON_Rename(json, name)
!! -------------------------------------------------------------------------- !!
    Implicit None
!! -------------------------------------------------------------------------- !!
    Type(typJSON), pointer, intent(in) :: json
    Character(len=*), intent(in)       :: name
!! -------------------------------------------------------------------------- !!
    Call jsonCore%Rename(p = json, name = name)
!! -------------------------------------------------------------------------- !!
End Subroutine
!! -------------------------------------------------------------------------- !!
